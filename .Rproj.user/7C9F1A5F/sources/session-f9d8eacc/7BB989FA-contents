Mass.function(fun = Anthead, keepscale = FALSE, legloc = 0, bytime = FALSE)


active <- unique(unlist(sapply(3000:3001, FUN = function(x){which(!is.na(locs[x,,3]))})))

trajlengs <- colMaxs(locs[,unique(unlist(sapply(3000:3001, FUN = function(x){which(!is.na(locs[x,,3]))}))),3], na.rm = TRUE)





!is.na(locs[3000,,3])

trajlengs[!is.na(locs[3000,,3])]

which(!is.na(locs[3000:3001,,3]))



nalist <- sapply(3000:3001, FUN = function(x){which(!is.na(locs[x,,3]))})
unique(unlist(nalist))

unique(unlist(sapply(3000:3001, FUN = function(x){which(!is.na(locs[x,,3]))})))

maybeactive <- Active(dat = trajs, rang = 1:124)
length(maybeactive)

################


activetrajs <- Active(trajs, 3000)
activevars <- colVars(trajs[,activetrajs,3], na.rm = TRUE)
mean(activevars)

rvars <- sapply(3000:6000, FUN = function(x){mean(colVars(trajs[,Active(trajs, x),3], na.rm = TRUE))})

rvars <- sapply(mintimef.anthead:maxtimef.anthead, FUN = function(x){mean(colVars(trajs.anthead[,Active(trajs.anthead, x),3], na.rm = TRUE))})

Anthead(keepscale = TRUE, bytime = FALSE, mintime = 10, maxtime = 120)

###################

problocs <- Import.single(g2023_08_01R, output = 1)
problocs <- Import.single(o2023_08_11R, output = 1)

masslocs <- Import.mass(output.mass = 1)

#################

min(which(rowSums(!is.na(trajs[,,1])) > 0))

##############




cVars <- c()
cV <- trajs[,,3]

redux <- cV[1, is.na(cV[1,]) == FALSE]
if(length(redux) == 0){
  cVars[1] <- 0
}else{
  cVars[1] <- circ.summary(redux)$circvariance
}

redux <- cV[10000, is.na(cV[10000,]) == FALSE]
if(length(redux) == 0){
  cVars[2] <- 0
}else{
  cVars[2] <- circ.summary(redux)$circvariance
}

##########

checkvars <- c()
unittrajs <- trajs[,,4] / trajs[,,4]

for(i in 1:dim(trajs)[2]){
  #unitvec <- unittrajs[,i]
  checkvars[i] <- sqrt(sum(cos(trajs[,i,3]), na.rm = TRUE)^2 + sum(sin(trajs[,i,3]), na.rm = TRUE)^2)/sum(!is.na(trajs[,i,1]))
}

sum(trajs[,1,1], na.rm = TRUE)^2
sum(trajs[,1,2], na.rm = TRUE)^2

sqrt(sum(trajs[,1,1], na.rm = TRUE)^2 + sum(trajs[,1,2], na.rm = TRUE)^2)

sum(!is.na(trajs[,1,2]))

varcoords <- trajs[,,1:2]

checkvars <- apply()