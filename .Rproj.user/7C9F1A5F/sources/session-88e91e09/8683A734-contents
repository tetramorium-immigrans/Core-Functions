trajinterna <- Import.single(300/a0320_240820)

Antlocs(trajinterna, mtime = 2)

rsums <- rowSums(trajbase$xvel) 

keepsums <- pbsapply(1:dim(trajbase$xvel)[2], FUN = function(x){       #Find the active trajectories for each time step and sum their x-velocities
  activetrajs <- Active(trajbase, x)
  sum(rsums[activetrajs])
  })


keepsums2 <- sum(rsums[keepsums])


ravgs <- apply(trajbase$xvel, 1, function(x){mean(x[x != 0])})


trajs <- Import.single(300/a0320_240820)

testi <- testy
testi[which(testy == 0)] <- c(11,11,11,11)

#interpolate x and y data
#Replace speed data at heading = -1 with 1e-5
#interpolate remaining 0s in speed data

#Somehow mark heading = -1 values in a special way in heading data
#calculate known xvel and yvel
#Interpolate from known xvel and yvel values
#Back-calculate into heading

#multiply by sconv and vconv at the end

trajs <- Import.single(300/a0320_240820)

antmax.antnetx <- max(colSums((trajreturn$x) != 0))
graphcol <- floor( (colSums((trajreturn$x) != 0)/antmax.antnetx*6)+1 )



x2 <- Matrix(data = 0, nrow = sparsedims[1], ncol = sparsedims[2], sparse = TRUE)
x2[cbind(trajdat$X..Trajectory, trajdat$Time)] <- trajdat$x * conv.p



intout <- pbapply(x, 1, function(z){
  tmin <- min(which(z != 0))
  tmax <- max(which(z != 0))
  
  z[tmin:tmax] <- replace(z[tmin:tmax], which(z[tmin:tmax] == 0), NA)
  z[tmin:tmax] <- approx(z, xout = tmin:tmax)$y
  
})

z <- x[15,]
tmin <- min(which(z != 0))
tmax <- max(which(z != 0))

ph2 <- replace(z[tmin:tmax], which(z[tmin:tmax] == 0), NA)
ph3 <- approx(ph2, n = length(ph2))$y

ph4 <- approx(replace(z[tmin:tmax], which(z[tmin:tmax] == 0), NA), n = length(z[tmin:tmax]))$y


ph <- approx(replace(z[tmin:tmax], which(z[tmin:tmax] == 0), NA) , xout = tmin:tmax)$y

innie <- pbapply(trajs$x, 1, function(z){
  mintemp <- min(which(z != 0))
  maxtemp <- max(which(z != 0))
  
  datmin <- c(datmin, mintemp)
  datmax <- c(datmax, maxtemp)
  
  z[maxtemp] - z[mintemp]
})

bug <- apply(speed, 1, function(r){min(which(r != 0))})  
